# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-03-13 15:25
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DayPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('description', models.TextField()),
                ('preparation', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DishIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('calories_per_unit', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Breakfast', 'Breakfast'), ('Lunch', 'Lunch'), ('Dinner', 'Dinner'), ('Supper', 'Supper'), ('Snack', 'Snack')], max_length=128)),
                ('dishes', models.ManyToManyField(to='food.Dish')),
            ],
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('Total Fat', 'Total Fat'), ('Saturated FatMonounsaturated Fat', 'Saturated FatMonounsaturated Fat'), ('Polyunsaturated Fat', 'Polyunsaturated Fat'), ('Total trans fatty acids', 'Total trans fatty acids'), ('Total trans-monoenoic fatty acids', 'Total trans-monoenoic fatty acids'), ('Total trans-polyenoic fatty acids', 'Total trans-polyenoic fatty acids'), ('Total Omega-3 fatty acids', 'Total Omega-3 fatty acids'), ('Total Omega-6 fatty acids', 'Total Omega-6 fatty acids'), ('Total carbohydrate', 'Total carbohydrate'), ('Added sugars', 'Added sugars'), ('Dietary fiber', 'Dietary fiber'), ('Vitamin A', 'Vitamin A'), ('Vitamin C', 'Vitamin C'), ('Vitamin D', 'Vitamin D'), ('Vitamin E', 'Vitamin E'), ('Vitamin K', 'Vitamin K'), ('Thiamin (vitamin B1)', 'Thiamin (vitamin B1)'), ('Riboflavin (vitamin B2)', 'Riboflavin (vitamin B2)'), ('Niacin (vitamin B3)', 'Niacin (vitamin B3)'), ('Pyridoxine (vitamin B6)', 'Pyridoxine (vitamin B6)'), ('Folate', 'Folate'), ('Cobalamine (vitamin B12)', 'Cobalamine (vitamin B12)'), ('Biotin', 'Biotin'), ('Pantothenic acid (vitamin B5)', 'Pantothenic acid (vitamin B5)'), ('Calcium', 'Calcium'), ('Iron', 'Iron'), ('Phosphorus', 'Phosphorus'), ('Iodine', 'Iodine'), ('Magnesium', 'Magnesium'), ('Zinc', 'Zinc'), ('Selenium', 'Selenium'), ('Copper', 'Copper'), ('Manganese', 'Manganese'), ('Protein', 'Protein')], max_length=128)),
                ('dri', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('goal', models.CharField(max_length=128)),
                ('estimate_calories_per_day', models.PositiveIntegerField()),
                ('estimate_protein_per_day', models.PositiveIntegerField()),
                ('estimate_fat_per_day', models.PositiveIntegerField()),
                ('estimate_carbohydrate_per_day', models.PositiveIntegerField()),
                ('day_plans', models.ManyToManyField(to='food.DayPlan')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25)),
                ('grams', models.FloatField()),
            ],
        ),
        migrations.AddField(
            model_name='nutrient',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food.Unit'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='nutrients_per_unit',
            field=models.ManyToManyField(blank=True, to='food.Nutrient'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food.Unit'),
        ),
        migrations.AddField(
            model_name='dishingredient',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='food.Ingredient'),
        ),
        migrations.AddField(
            model_name='dishingredient',
            name='units',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='food.Unit'),
        ),
        migrations.AddField(
            model_name='dayplan',
            name='meals',
            field=models.ManyToManyField(to='food.Meal'),
        ),
    ]
